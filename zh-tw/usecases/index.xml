<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>情境案例 on GRAVITY</title><link>http://gravity.brobridge.com.tw/zh-tw/usecases/</link><description>Recent content in 情境案例 on GRAVITY</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><atom:link href="http://gravity.brobridge.com.tw/zh-tw/usecases/index.xml" rel="self" type="application/rss+xml"/><item><title>改善低效率的多資料源聚合</title><link>http://gravity.brobridge.com.tw/zh-tw/usecases/aggregation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gravity.brobridge.com.tw/zh-tw/usecases/aggregation/</guid><description>多資料來源的聚合與關聯工作也是在傳統資料處理上常見的工作之一，但一直以來其處理效率都不會太好且缺乏平行處理能力。原因是因爲查詢工作需要往返於多個來源之間，產生的額外開銷相對就比較多，其往返成本與問題較單一查詢來得更爲明顯。
傳統的多資料源的聚合和關聯工作缺點 我們在處理傳統的資料源聚合與關聯工作時，通常會遇到如下這些問題：
不易實作：無論是資料庫管理員還是應用程式開發人員，都是一種負擔。 負載高：每個需求和行為都需要查詢資料庫或爬資料，導致所有系統都極為忙碌。 效率低：需要時才開始查詢、聚合、轉換處理，如抓取資料如大海撈針，效率極低。 不同步：不同來源的不同步資料輸入會造成大量等待和重試（Retry）。 成本高：大量跨資料庫關聯查詢呼叫伴隨大量 Round-Trip 來回呼叫問題。 衝擊大：資料被越多應用需要，資料源負擔就越大，效能衝擊越嚴重。 採用 GRAVITY 或得的改善 在導入 GRAVITY 之後，我們可以利用不同的管線將各資料源的資料拉進快取，並利用 CDC 的事件通知功能及時同步變更資料，如此在 GRAVITY 數據中台裡面就能獲得所有資料源的最新資料。然後根據應用端訂閱的要求(最小粒度可以精細到“欄位”)把資料彙整後，再建立新的管線將聚合好的資料落到應用端的專屬資料庫即可。
如此一來，資料源就不再會遭受大量的關聯查詢衝擊，而程式端也不需要設計復雜的關聯作業而更能專注於本身的業務邏輯即可。更重要的是，由於數據中台所發揮的資料供給效率的提升，整個資料系統相關的資料庫與應用程式都能同時享受到效能提升的好處！
導入 GRAVITY 之後的設計改良 有了 GRAVITY 數據中台的支援，各種原有的復雜查詢機制與流程都可大幅簡化，主要體現爲如下這些要點：
平行化進行聚合和關聯工作 資料結果在應用執行前就已經準備好 每個需求直接讀取最終的 Virtual Table</description></item><item><title>改善資料落檔作業的問題</title><link>http://gravity.brobridge.com.tw/zh-tw/usecases/export-to-file/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gravity.brobridge.com.tw/zh-tw/usecases/export-to-file/</guid><description>資料庫系統的資料交換一直是企業的痛，不管是跨部門、跨系統還是橫跨企業組織，有太多的問題、風險和潛在成本存在，於是大多數人最終還是選擇用最原始的資料交換媒介「檔案」。這在業界普遍被稱作「落檔作業」，其作法就是將外部系統所需要的資料，定期從資料庫爬出來後，放置在一個雙方系統能共同存取的儲存空間。然後外部系統就會定期來將檔案搬回自家環境，把檔案內容解開寫入到本地資料庫內，接著再進行各種資料的處裡工作，
這樣的做法看起來原始笨拙，但卻解決了一些重要的問題，並以下列為前提實現資料交換的工作：
無需讓外部系統直接接觸內部資料庫 可以避免外部而來的大量查詢直接衝擊資料庫 可以控制批次爬資料庫的時間，盡量避免影響正常業務執行 資料庫系統管理人可以一定程度管控資料進出 無需冒著系統不安全性、不穩定性的風險來提供資料 資料落檔作業的缺點 然而，資料落檔作業其實是種實務上的妥協，並不是理想的做法。這種作法往往帶來許多系統的限制，甚至在資料量大時仍然無法避免既有資料庫系統壓力，更多時候是以傷害使用者體驗、捨去需求之下的堪用做法。
資料非常不即時 每次落檔作業的時間很長 落檔作業執行時會造成資料庫系統巨大壓力，影響正常業務運行 需要資料的外部系統越多，對系統影響越大 每次不同需求，都需要開發客製化落檔作業程式 每次都需要資料庫系統原負責團隊協助開發 需要大量跨團隊溝通、制定資料交換格式和方法 每次跨系統介接都需要花大量討論和規劃開發的時間 基於上述種種原因，大多數系統負責團隊，多數時候不願意提供資料給外部系統，以免帶來不必要的額外麻煩。也因為資料交換成本高，也不利於大規模的系統介接和整合，更不利於應用的發展。
如何以 GRAVITY 進行改善？ GRAVITY 能提供更好的方法，實現跨系統的資料交換，能提供應用即時資料，而且無損原始資料庫的效能和穩定性。每次的跨系統資料介接工作，都無需開發任何程式，只需要簡單的設定、授權即可，省時又省力。
做法上，會建立 GRAVITY 資料代理節點，以即時監聽資料庫變更事件，並對變更資料進行快取。而外部系統再不碰觸原始資料庫系統的情況下，以統一方式對所需的資料進行訂閱，被訂閱的資料會即時推送出來，甚至依據設定直接寫入外部系統的資料庫。
總體來說，改善後的優點如下：
可以即時提供資料給外部系統 原始資料庫永遠沒有額外的壓力或負擔 外部系統不能直接觸內部資料庫 資料進出可被控管 統一資料訂閱模式，無須多餘的跨團隊溝通 無需開發介接作業程式 資料可隨訂閱隨用，跨系統介接迅速 導入 GRAVITY 後，除了可以保持資料落檔作業的優點，也能避免其缺點。</description></item><item><title>解決批次處理效率和效能衝擊</title><link>http://gravity.brobridge.com.tw/zh-tw/usecases/batch-problem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gravity.brobridge.com.tw/zh-tw/usecases/batch-problem/</guid><description>批次作業在傳統的資料處理上是很常見的手法，通常這類型的作業需要對資料庫作大量的查詢，對資料源的壓力非常大，因此不太可能在正常營業時間執行，而必須安排在夜間或是周末等離峰時段才能執行，以免影響正常的業務查詢。
傳統批次處理所遭遇的問題 越多應用需要執行批次作業，對資料源負擔就越大（包括協助輸出資料的人）。因爲批次處理都會伴隨著瞬間高系統負載，如果還有多個批次作業任務同時執行，對於資料庫的衝擊就更加嚴重了，很容易導致資料源處於超載的窘境。
這情形會導致其他即時查詢回應延遲而導致服務無法正常運作，往往需要提早公告某些服務於批次處理的時段被迫暫停。這當然會讓用戶體驗產生負面影響、損及企業形象或是造成某些程度的營業損失(對於 24x7 的服務來說尤爲嚴重)。
GRAVITY 帶來的好處 得助於 GRAVITY 的快取功能，所有之前查詢過的資料已經存在於數據中臺，利用快照能力同時把最新的資料推送到消費端應用程式的專屬資料庫，因此傳統透過批次作業所供給的資料消費對象在任何時候都已經取得所需資料，而不需要再另行安排批次行程了。
對於源資料庫來說，透過 CDC 技術只需拋出變更事件與變更資料就好，所以不會再有其他資料請求。因此，過往因爲應付批次作業而受到影響的其他服務都可如常運行而不干擾，當然也就消彌了因批次作業影響產生的各種負面效應。
採用 GRAVITY 之後的作業變更 企業在導入 GRAVITY 之後，相較於傳統的批次作業行爲，將會得到如下這些改良：
資料交換不再需要寫多次程式或提供 API。 資料平均發送處理，不會有一瞬間的效能衝擊。 只讀取資料源一次，即可更新到多個目地端資料庫，實現多重發佈、重複發佈。 快取（Cache）機制支撐，可以同時供應多個應用，而不會衝擊資料源。 資料源不再需要為了應用端，而花費人力、時間準備資料，同時也大幅度地降低溝通成本。</description></item><item><title>跨雲、異地資料管理</title><link>http://gravity.brobridge.com.tw/zh-tw/usecases/hybrid-cloud/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gravity.brobridge.com.tw/zh-tw/usecases/hybrid-cloud/</guid><description>越來越多的企業需要將應用程式部署到不同的地區或是上到雲端去，這對於企業的成長當然事件好事，但對於資料的供應議題來說，卻是面臨到前所未有的難度挑戰。
異地與跨雲的資料管理問題 基本上，這個問題是前一個使用案例的延伸，只是在傳統的做法之下，問題更多、更爲彰顯放大而已：
網路壓力高
因爲距離的延伸，所經過的網路鏈路與節點也相對地成倍數的增加，單純的往返距離比同一地點多出的倍數可能是以千以萬來計算。再加上關聯聚合查詢等處理動作，造成的延遲度可能從原本的毫秒級單位上升爲秒級單位，而網路運輸成本也同時是原本倍數成長，對於網路效能的衝擊非常客觀。
大範圍整體系統鎖死程度高
受到網路問題的影響，原本的單一查詢時間也因此拉長不少，導致查詢之間的等待時間也變得更久了。假如遇到資料鎖定的情況，也更容易在這種情況下迅速惡化。結果將導致所有相關程式都受到嚴重的衝擊，而出現整體的效能滑坡。
影響正常業務運作
由於整體效能的下滑，原本在單一地點不太會遇到的問題可能就會一一浮現出來。這會壓縮到系統的可用性，或是造成原本的正常業務運作受到影響了。
導入 GRAVITY 的效益 我們一再強調，GRAVITY 數據中台的設計有提供快取與快照功能，可以讓應用服務程式就近存取其專屬的資料庫。不管資料源與應用端的距離多遠，專屬資料庫都是跟隨在應用程式所在位置，也就完全沒有長距離網路所衍伸出來的相關問題。對應用程式來說，資料的存取效能只會提升而不會下降。
至於資料的及時性，歸功於 CDC 協定的幫助，所有變更資料都能即時的同步到各個消費端應用資料庫。而且，因爲整個傳輸過程都只會傳輸變更資料而已，已經存在於數據中台的資料完全不會再出現於後來的網路傳輸中，因此，整個網路傳輸量也大幅度的下降，其往返成本與開銷也自然獲得很大的改善，整體網路的傳輸效能也就可以釋放出來，加快了資料的傳遞速度。
由於數據中台同時也能改善關聯聚合查詢的效能、有效避開各種嚴重的鎖死問題，對來源資料庫的壓力也就能獲得大幅度的釋放，因此對於原本正常業務的衝擊問題也就迎刃而解了。</description></item></channel></rss>